local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "| Gun Simulator Script |",
   LoadingTitle = "⚙️ZenithScripts ⚙️",
   LoadingSubtitle = "by Z3nith_Scriptz",
   ConfigurationSaving = {
      FileName = "Z3nith_Scriptz best scripts"
   }
})

-- Debugging function
local function debugPrint(message)
   print("[DEBUG] " .. message)
   Rayfield:Notify({
      Title = "Debug",
      Content = message,
      Duration = 3,
      Image = 4483362458
   })
end

-- Create all tabs first
local MainTab = Window:CreateTab("🏠|Main", nil)
local CombatTab = Window:CreateTab("🔫|Combat", nil)
local PlayerTab = Window:CreateTab("🗣️|Player", nil)
local VisualTab = Window:CreateTab("👁️|Visual", nil)

-- Main Tab
local MainSection = MainTab:CreateSection("Main Features")

-- Combat Tab
local CombatSection = CombatTab:CreateSection("Combat Features")

-- AIMLOCK (Hold RMB)
local AimlockToggle = CombatTab:CreateToggle({
   Name = "Aimlock (Hold Right Click - Use First Person)",
   CurrentValue = false,
   Flag = "AimlockToggle",
   Callback = function(Value)
      _G.aimlockEnabled = Value
      
      if Value then
         debugPrint("Initializing Aimlock...")
         
         -- Initialize only once
         if _G.aimlockInitialized then
            debugPrint("Aimlock already initialized")
            return
         end
         _G.aimlockInitialized = true
         
         local Players = game:GetService("Players")
         local LocalPlayer = Players.LocalPlayer
         local Camera = workspace.CurrentCamera
         local UIS = game:GetService("UserInputService")
         
         -- Wait for character to load
         if not LocalPlayer.Character then
            LocalPlayer.CharacterAdded:Wait()
         end
         local humanoid = LocalPlayer.Character:WaitForChild("Humanoid")
         
         local function getClosestPlayer()
            local closestPlayer = nil
            local shortestDistance = math.huge
            local localRoot = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            
            if not localRoot then
               debugPrint("No local root part found")
               return nil
            end
            
            for _, player in pairs(Players:GetPlayers()) do
               if player ~= LocalPlayer and player.Character then
                  local character = player.Character
                  local humanoid = character:FindFirstChildOfClass("Humanoid")
                  local rootPart = character:FindFirstChild("HumanoidRootPart")
                  
                  if humanoid and humanoid.Health > 0 and rootPart then
                     local distance = (localRoot.Position - rootPart.Position).Magnitude
                     if distance < shortestDistance then
                        shortestDistance = distance
                        closestPlayer = player
                     end
                  end
               end
            end
            return closestPlayer
         end
         
         local rmbDown = false
         UIS.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton2 then
               rmbDown = true
            end
         end)
         
         UIS.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton2 then
               rmbDown = false
            end
         end)
         
         _G.aimlockConnection = game:GetService("RunService").Heartbeat:Connect(function()
            if not _G.aimlockEnabled then
               _G.aimlockConnection:Disconnect()
               _G.aimlockInitialized = false
               debugPrint("Aimlock disconnected")
               return
            end
            
            if rmbDown then
               local closestPlayer = getClosestPlayer()
               if closestPlayer and closestPlayer.Character then
                  local targetRoot = closestPlayer.Character:FindFirstChild("HumanoidRootPart")
                  if targetRoot then
                     local direction = (targetRoot.Position - Camera.CFrame.Position).Unit
                     Camera.CFrame = CFrame.new(Camera.CFrame.Position, Camera.CFrame.Position + direction)
                  end
               end
            end
         end)
         
         debugPrint("Aimlock ready - Hold RMB to activate")
      else
         if _G.aimlockConnection then
            _G.aimlockConnection:Disconnect()
            _G.aimlockInitialized = false
            debugPrint("Aimlock disabled")
         end
      end
   end,
})

-- INFINITE AMMO in Combat Tab
local InfAmmoToggle = CombatTab:CreateToggle({
   Name = "Infinite Ammo",
   CurrentValue = false,
   Flag = "InfAmmoToggle",
   Callback = function(Value)
      _G.InfAmmo = Value
      
      if Value then
         debugPrint("Infinite Ammo Activated")
         
         -- Method 1: Hook metatable to prevent ammo decrease
         if not _G.originalMeta then
            _G.originalMeta = {
               __index = getrawmetatable(game).__index,
               __newindex = getrawmetatable(game).__newindex
            }
         end
         
         setreadonly(getrawmetatable(game), false)
         
         getrawmetatable(game).__index = newcclosure(function(self, key)
            if _G.InfAmmo then
               local keyLower = tostring(key):lower()
               if keyLower == "ammo" or keyLower == "bullets" or keyLower == "clip" then
                  return math.huge
               end
            end
            return _G.originalMeta.__index(self, key)
         end)
         
         getrawmetatable(game).__newindex = newcclosure(function(self, key, value)
            if _G.InfAmmo then
               local keyLower = tostring(key):lower()
               if keyLower == "ammo" or keyLower == "bullets" or keyLower == "clip" then
                  if type(value) == "number" and value < 999 then
                     return
                  end
               end
            end
            return _G.originalMeta.__newindex(self, key, value)
         end)
         
         setreadonly(getrawmetatable(game), true)
         
         -- Method 2: Actively set ammo values
         _G.ammoLoop = game:GetService("RunService").Heartbeat:Connect(function()
            if not _G.InfAmmo then return end
            local character = game.Players.LocalPlayer.Character
            if character then
               for _, tool in pairs(character:GetChildren()) do
                  if tool:IsA("Tool") then
                     for _, v in pairs(tool:GetDescendants()) do
                        if v:IsA("IntValue") and (v.Name:lower():find("ammo") or v.Name:lower():find("bullet")) then
                           v.Value = 9999
                        end
                     end
                  end
               end
            end
         end)
      else
         debugPrint("Infinite Ammo Deactivated")
         -- Restore original metatable
         if _G.originalMeta then
            setreadonly(getrawmetatable(game), false)
            getrawmetatable(game).__index = _G.originalMeta.__index
            getrawmetatable(game).__newindex = _G.originalMeta.__newindex
            setreadonly(getrawmetatable(game), true)
         end
         
         if _G.ammoLoop then
            _G.ammoLoop:Disconnect()
         end
      end
   end
})

-- Player Tab
local PlayerSection = PlayerTab:CreateSection("Player Features")

local WalkSpeedSlider = PlayerTab:CreateSlider({
   Name = "Walkspeed Slider",
   Range = {16, 100},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "WalkSpeedSlider",
   Callback = function(Value)
       local humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
       if humanoid then
           humanoid.WalkSpeed = Value
       end
   end,
})

local PersistentWalkSpeed = PlayerTab:CreateToggle({
    Name = "Persistent WalkSpeed",
    CurrentValue = false,
    Flag = "PersistentWalkSpeed",
    Callback = function(Value)
        if Value then
            game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(character)
                local humanoid = character:WaitForChild("Humanoid")
                humanoid.WalkSpeed = WalkSpeedSlider.Value
            end)
        end
    end
})

-- Visual Tab
local VisualSection = VisualTab:CreateSection("ESP Features")

local EspToggle = VisualTab:CreateToggle({
   Name = "ESP (Player Highlight)",
   CurrentValue = false,
   Flag = "ESPToggle",
   Callback = function(Value)
      _G.espEnabled = Value
      
      if Value then
         debugPrint("Initializing ESP...")
         
         _G.espBoxes = {}
         local Players = game:GetService("Players")
         local LocalPlayer = Players.LocalPlayer
         
         local function createEspBox(player)
            if player == LocalPlayer then return end
            
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
            
            local highlight = Instance.new("Highlight")
            highlight.Name = player.Name .. "_ESP"
            highlight.Adornee = character
            highlight.FillColor = player.Team == LocalPlayer.Team and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
            highlight.FillTransparency = 0.5
            highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
            highlight.Parent = character
            
            local billboard = Instance.new("BillboardGui")
            billboard.Name = "ESP_Name"
            billboard.Adornee = humanoidRootPart
            billboard.Size = UDim2.new(0, 100, 0, 50)
            billboard.StudsOffset = Vector3.new(0, 3, 0)
            billboard.AlwaysOnTop = true
            billboard.Parent = humanoidRootPart
            
            local nameLabel = Instance.new("TextLabel")
            nameLabel.Text = player.Name
            nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
            nameLabel.BackgroundTransparency = 1
            nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            nameLabel.Parent = billboard
            
            _G.espBoxes[player] = {Highlight = highlight, Billboard = billboard}
         end
         
         for _, player in pairs(Players:GetPlayers()) do
            if player.Character then
               createEspBox(player)
            end
            player.CharacterAdded:Connect(function()
               if _G.espEnabled then
                  createEspBox(player)
               end
            end)
         end
         
         Players.PlayerAdded:Connect(function(player)
            player.CharacterAdded:Connect(function()
               if _G.espEnabled then
                  createEspBox(player)
               end
            end)
         end)
      else
         if _G.espBoxes then
            for _, espData in pairs(_G.espBoxes) do
               if espData.Highlight then espData.Highlight:Destroy() end
               if espData.Billboard then espData.Billboard:Destroy() end
            end
            _G.espBoxes = {}
         end
      end
   end
})

-- Initialization
debugPrint("Script loaded successfully")
